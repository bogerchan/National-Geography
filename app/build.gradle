apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

// Release and Flurry configuration
apply from: 'release.gradle'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "me.boger.geographic"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file('../store.jks')
            storePassword getValue('storePassword')
            keyAlias getValue('keyAlias')
            keyPassword getValue('keyPassword')
        }
        beta {
            storeFile file('../store.jks')
            storePassword getValue('storePassword')
            keyAlias getValue('keyAlias')
            keyPassword getValue('keyPassword')
        }
    }
    buildTypes {
        debug {
            buildConfigField('boolean', 'LOGGABLE', 'true')
        }
        beta {
            buildConfigField('boolean', 'LOGGABLE', 'true')
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro', 'proguard-fresco.pro'
            signingConfig signingConfigs.release
        }
        release {
            buildConfigField('boolean', 'LOGGABLE', 'false')
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro', 'proguard-fresco.pro'
            signingConfig signingConfigs.release
        }
    }
    defaultConfig {
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        resValue 'string', 'api_key_for_flurry', getValue('apiKeyForFlurry')
    }
    lintOptions {
        abortOnError false
    }
}

def getValue(String key) {
    project.hasProperty(key) ? project.getProperty(key) : System.getenv(key) ?: ""
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.facebook.fresco:fresco:1.3.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.1.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'jp.wasabeef:recyclerview-animators:2.2.6'
    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.github.dinuscxj:LoadingDrawable:db4ceb6b90'
    implementation 'com.zqc.opencc.android.lib:lib-opencc-android:0.8.0@aar'
    implementation 'com.flurry.android:ads:8.2.0'
    testImplementation 'junit:junit:4.12'
}
repositories {
    mavenCentral()
}